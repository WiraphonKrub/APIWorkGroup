// <auto-generated />
using System;
using APIWorkGroup.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIWorkGroup.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230510062310_Update_Alltable")]
    partial class Update_Alltable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("APIWorkGroup.Models.Admin_TB", b =>
                {
                    b.Property<int>("Admin_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Admin_address")
                        .HasColumnType("longtext");

                    b.Property<string>("Admin_email")
                        .HasColumnType("longtext");

                    b.Property<string>("Admin_name")
                        .HasColumnType("longtext");

                    b.Property<string>("Admin_password")
                        .HasColumnType("longtext");

                    b.Property<string>("Admin_username")
                        .HasColumnType("longtext");

                    b.Property<int>("Status_id")
                        .HasColumnType("int");

                    b.Property<int>("Type_id")
                        .HasColumnType("int");

                    b.HasKey("Admin_id");

                    b.ToTable("admin_TBs");
                });

            modelBuilder.Entity("APIWorkGroup.Models.Application_TB", b =>
                {
                    b.Property<int>("AppCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AppDetails")
                        .HasColumnType("longtext");

                    b.Property<string>("AppGroup")
                        .HasColumnType("longtext");

                    b.Property<string>("AppName")
                        .HasColumnType("longtext");

                    b.Property<string>("AppType")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Golive")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InstallerPath")
                        .HasColumnType("longtext");

                    b.Property<bool>("Mobile")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Url_In")
                        .HasColumnType("longtext");

                    b.Property<string>("Url_PUB")
                        .HasColumnType("longtext");

                    b.HasKey("AppCode");

                    b.ToTable("application_TBs");
                });

            modelBuilder.Entity("APIWorkGroup.Models.BPO_TB", b =>
                {
                    b.Property<int>("BPOId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BPOCompanyName")
                        .HasColumnType("longtext");

                    b.Property<string>("BPOContactPhone")
                        .HasColumnType("longtext");

                    b.Property<string>("BPOEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("BPOName")
                        .HasColumnType("longtext");

                    b.Property<string>("BPOTeam")
                        .HasColumnType("longtext");

                    b.HasKey("BPOId");

                    b.ToTable("BPO_TBs");
                });

            modelBuilder.Entity("APIWorkGroup.Models.InterfaceApplication_TB", b =>
                {
                    b.Property<int>("IAppId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("IAppDetails")
                        .HasColumnType("longtext");

                    b.Property<string>("IAppGroup")
                        .HasColumnType("longtext");

                    b.Property<string>("IAppName")
                        .HasColumnType("longtext");

                    b.Property<string>("IIpAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("IType")
                        .HasColumnType("longtext");

                    b.HasKey("IAppId");

                    b.ToTable("InterfaceApplication_TBs");
                });

            modelBuilder.Entity("APIWorkGroup.Models.MALISIB_TB", b =>
                {
                    b.Property<int>("MALISUBId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AgreementNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Contact")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("MALISUBId");

                    b.ToTable("MALISIB_TBs");
                });

            modelBuilder.Entity("APIWorkGroup.Models.OCIO_TB", b =>
                {
                    b.Property<int>("OCIOId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("OCIOCompanyName")
                        .HasColumnType("longtext");

                    b.Property<string>("OCIOName")
                        .HasColumnType("longtext");

                    b.Property<string>("OCIOPhone")
                        .HasColumnType("longtext");

                    b.Property<string>("OCIOTeam")
                        .HasColumnType("longtext");

                    b.HasKey("OCIOId");

                    b.ToTable("OCIO_TBs");
                });

            modelBuilder.Entity("APIWorkGroup.Models.Platform_TB", b =>
                {
                    b.Property<int>("PlatformId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("PlatformName")
                        .HasColumnType("longtext");

                    b.Property<int>("SubPlatform_TBSubPlatformId")
                        .HasColumnType("int");

                    b.HasKey("PlatformId");

                    b.HasIndex("SubPlatform_TBSubPlatformId");

                    b.ToTable("Platform_TBs");
                });

            modelBuilder.Entity("APIWorkGroup.Models.Server_TB", b =>
                {
                    b.Property<int>("ServerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cpu")
                        .HasColumnType("longtext");

                    b.Property<string>("IpAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("Location")
                        .HasColumnType("longtext");

                    b.Property<int>("Memory")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext");

                    b.Property<string>("OperatingSystem")
                        .HasColumnType("longtext");

                    b.Property<string>("ServerDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("ServerName")
                        .HasColumnType("longtext");

                    b.Property<int>("Storage")
                        .HasColumnType("int");

                    b.HasKey("ServerId");

                    b.ToTable("Server_TBs");
                });

            modelBuilder.Entity("APIWorkGroup.Models.Status_TB", b =>
                {
                    b.Property<int>("Status_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Status_name")
                        .HasColumnType("longtext");

                    b.HasKey("Status_id");

                    b.ToTable("Status_TBs");
                });

            modelBuilder.Entity("APIWorkGroup.Models.SubPlatform_TB", b =>
                {
                    b.Property<int>("SubPlatformId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("SubPlatformName")
                        .HasColumnType("longtext");

                    b.HasKey("SubPlatformId");

                    b.ToTable("SubPlatform_TBs");
                });

            modelBuilder.Entity("APIWorkGroup.Models.SupportTeam_TB", b =>
                {
                    b.Property<int>("SupportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasColumnType("longtext");

                    b.Property<string>("SupportTeam")
                        .HasColumnType("longtext");

                    b.Property<string>("SupporterEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("SupporterName")
                        .HasColumnType("longtext");

                    b.Property<string>("SupporterPhone")
                        .HasColumnType("longtext");

                    b.HasKey("SupportId");

                    b.ToTable("SupportTeam_TBs");
                });

            modelBuilder.Entity("APIWorkGroup.Models.Type_TB", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("MALISIB_TBMALISUBId")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .HasColumnType("longtext");

                    b.HasKey("TypeId");

                    b.HasIndex("MALISIB_TBMALISUBId");

                    b.ToTable("Type_TBs");
                });

            modelBuilder.Entity("APIWorkGroup.Models.Vendor_TB", b =>
                {
                    b.Property<int>("VendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("VendorCompanyName")
                        .HasColumnType("longtext");

                    b.Property<string>("VendorEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("VendorLocation")
                        .HasColumnType("longtext");

                    b.Property<string>("VendorName")
                        .HasColumnType("longtext");

                    b.Property<string>("VendorPhone")
                        .HasColumnType("longtext");

                    b.HasKey("VendorId");

                    b.ToTable("Vendor_TBs");
                });

            modelBuilder.Entity("APIWorkGroup.Models.Platform_TB", b =>
                {
                    b.HasOne("APIWorkGroup.Models.SubPlatform_TB", "SubPlatform_TB")
                        .WithMany("Platform_TBs")
                        .HasForeignKey("SubPlatform_TBSubPlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubPlatform_TB");
                });

            modelBuilder.Entity("APIWorkGroup.Models.Type_TB", b =>
                {
                    b.HasOne("APIWorkGroup.Models.MALISIB_TB", "MALISIB_TB")
                        .WithMany("Type_TBs")
                        .HasForeignKey("MALISIB_TBMALISUBId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MALISIB_TB");
                });

            modelBuilder.Entity("APIWorkGroup.Models.MALISIB_TB", b =>
                {
                    b.Navigation("Type_TBs");
                });

            modelBuilder.Entity("APIWorkGroup.Models.SubPlatform_TB", b =>
                {
                    b.Navigation("Platform_TBs");
                });
#pragma warning restore 612, 618
        }
    }
}
